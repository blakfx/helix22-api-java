/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.blakfx.crypto;

public class helix implements helixConstants {
  public static byte[] cdata(SWIGTYPE_p_void ptr, int nelements) {
    return helixJNI.cdata(SWIGTYPE_p_void.getCPtr(ptr), nelements);
  }

  public static void memmove(SWIGTYPE_p_void data, byte[] indata) {
    helixJNI.memmove(SWIGTYPE_p_void.getCPtr(data), indata);
  }

  public static long imaxabs(long n) {
    return helixJNI.imaxabs(n);
  }

  public static imaxdiv_t imaxdiv(long numer, long denom) {
    return new imaxdiv_t(helixJNI.imaxdiv(numer, denom), true);
  }

  public static long strtoimax(String nptr, SWIGTYPE_p_p_char endptr, int base) {
    return helixJNI.strtoimax(nptr, SWIGTYPE_p_p_char.getCPtr(endptr), base);
  }

  public static java.math.BigInteger strtoumax(String nptr, SWIGTYPE_p_p_char endptr, int base) {
    return helixJNI.strtoumax(nptr, SWIGTYPE_p_p_char.getCPtr(endptr), base);
  }

  public static void setLOCAL_USER_ID(java.math.BigInteger value) {
    helixJNI.LOCAL_USER_ID_set(value);
  }

  public static java.math.BigInteger getLOCAL_USER_ID() {
    return helixJNI.LOCAL_USER_ID_get();
  }

  public static void setSERVER_DELAY_RESPONSE_TIME(int value) {
    helixJNI.SERVER_DELAY_RESPONSE_TIME_set(value);
  }

  public static int getSERVER_DELAY_RESPONSE_TIME() {
    return helixJNI.SERVER_DELAY_RESPONSE_TIME_get();
  }

  public static void logger_setLogLevel(logLevel_t logLevelFlags) {
    helixJNI.logger_setLogLevel(logLevelFlags.swigValue());
  }

  public static logLevel_t logger_getLogLevel() {
    return logLevel_t.swigToEnum(helixJNI.logger_getLogLevel());
  }

  public static void logger_enableLogLevelFlag(long flag) {
    helixJNI.logger_enableLogLevelFlag(flag);
  }

  public static void logger_disableLogLevelFlag(long flag) {
    helixJNI.logger_disableLogLevelFlag(flag);
  }

  public static void setLogOutputFile(String fileName, long createType) {
    helixJNI.setLogOutputFile(fileName, createType);
  }

  public static void setLogOutputDatabaseFile(String fileName, long createType) {
    helixJNI.setLogOutputDatabaseFile(fileName, createType);
  }

  public static java.math.BigInteger jCrypto_simpleSearchForRecipientByName(String lookup, long waitInMillis) {
    return helixJNI.jCrypto_simpleSearchForRecipientByName(lookup, waitInMillis);
  }

  public static java.math.BigInteger jCrypto_simpleSearchForRecipientByEmail(String lookup, long waitInMillis) {
    return helixJNI.jCrypto_simpleSearchForRecipientByEmail(lookup, waitInMillis);
  }

  public static invokeStatus_t jCrypto_userValidate(java.math.BigInteger user_id) {
    return invokeStatus_t.swigToEnum(helixJNI.jCrypto_userValidate(user_id));
  }

  public static invokeStatus_t jCrypto_userRelease(java.math.BigInteger user_id) {
    return invokeStatus_t.swigToEnum(helixJNI.jCrypto_userRelease(user_id));
  }

  public static int void2int(long v) {
    return helixJNI.void2int(v);
  }

  public static String void2str(long v) {
    return helixJNI.void2str(v);
  }

  public static java.math.BigInteger jCrypto_encryptStart(java.math.BigInteger user_id, String clearData, long dataSize, String password) {
    return helixJNI.jCrypto_encryptStart(user_id, clearData, dataSize, password);
  }

  public static byte[] jCrypto_encryptGetOutputData(java.math.BigInteger encrypt_id) {
  return helixJNI.jCrypto_encryptGetOutputData(encrypt_id);
}

  public static invokeStatus_t jCrypto_encryptOutputExists(java.math.BigInteger encrypt_id) {
    return invokeStatus_t.swigToEnum(helixJNI.jCrypto_encryptOutputExists(encrypt_id));
  }

  public static invokeStatus_t jCrypto_encryptConclude(java.math.BigInteger encrypt_id) {
    return invokeStatus_t.swigToEnum(helixJNI.jCrypto_encryptConclude(encrypt_id));
  }

  public static java.math.BigInteger jCrypto_decryptStart(byte[] cipherData, String password) {
    return helixJNI.jCrypto_decryptStart(cipherData, password);
  }

  public static byte[] jCrypto_decryptGetOutputData(java.math.BigInteger decrypt_id) {
  return helixJNI.jCrypto_decryptGetOutputData(decrypt_id);
}

  public static invokeStatus_t jCrypto_decryptConclude(java.math.BigInteger decrypt_id) {
    return invokeStatus_t.swigToEnum(helixJNI.jCrypto_decryptConclude(decrypt_id));
  }

  public static invokeStatus_t jCrypto_decryptOutputExists(java.math.BigInteger decrypt_id) {
    return invokeStatus_t.swigToEnum(helixJNI.jCrypto_decryptOutputExists(decrypt_id));
  }

  public static invokeStatus_t jCrypto_serverIsConnected() {
    return invokeStatus_t.swigToEnum(helixJNI.jCrypto_serverIsConnected());
  }

  public static invokeStatus_t jCrypto_serverDisconnect() {
    return invokeStatus_t.swigToEnum(helixJNI.jCrypto_serverDisconnect());
  }

  public static invokeStatus_t jCrypto_serverConnect() {
    return invokeStatus_t.swigToEnum(helixJNI.jCrypto_serverConnect());
  }

  public static invokeStatus_t jCrypto_waitEvent(java.math.BigInteger crypto_ID, long time_in_ms) {
    return invokeStatus_t.swigToEnum(helixJNI.jCrypto_waitEvent(crypto_ID, time_in_ms));
  }

  public static promiseStatusAndFlags_t jCrypto_waitEventStatus(java.math.BigInteger crypto_ID) {
    return promiseStatusAndFlags_t.swigToEnum(helixJNI.jCrypto_waitEventStatus(crypto_ID));
  }

  public static promiseStatusAndFlags_t jPromiseManager_getStatus(java.math.BigInteger promise_ID) {
    return promiseStatusAndFlags_t.swigToEnum(helixJNI.jPromiseManager_getStatus(promise_ID));
  }

  public static SWIGTYPE_p_unsigned_char jPromiseManager_getUserData(java.math.BigInteger promise_ID, java.math.BigInteger user_data_id) {
    long cPtr = helixJNI.jPromiseManager_getUserData(promise_ID, user_data_id);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public static invokeStatus_t jCrypto_apiStartup(String serverIP, int port, long flags) {
    return invokeStatus_t.swigToEnum(helixJNI.jCrypto_apiStartup(serverIP, port, flags));
  }

  public static invokeStatus_t jCrypto_apiStartup_Advanced(String serverIP, int port, String customDUID, long flags) {
    return invokeStatus_t.swigToEnum(helixJNI.jCrypto_apiStartup_Advanced(serverIP, port, customDUID, flags));
  }

  public static void jCrypto_apiShutdown() {
    helixJNI.jCrypto_apiShutdown();
  }

  public static invokeStatus_t jCrypto_accountCreate(String userName) {
    return invokeStatus_t.swigToEnum(helixJNI.jCrypto_accountCreate(userName));
  }

  public static invokeStatus_t jCrypto_accountLogin(String userName) {
    return invokeStatus_t.swigToEnum(helixJNI.jCrypto_accountLogin(userName));
  }

  public static long jCrypto_accountDelete(String userName) {
    return helixJNI.jCrypto_accountDelete(userName);
  }

}
